<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YrIAAAAASUVORK5CYII=
</value>
  </data>
</root>